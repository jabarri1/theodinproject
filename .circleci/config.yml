---
version: 2.1

executors:
  rails-executor:
    docker:
      - image: circleci/2.6.6-stretch-node
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: theodinproject
      - image: circleci/postgres:12.2-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: theodinproject_test
    working_directory: ~/theodinproject

jobs:
  rspec:
    executor: rails-executor
    steps:
      - checkout

      # Install bundler
      - run: gem install bundler

      # Restore Cached Dependencies
      - restore_cache:
          name: Restore bundle cache
          key: theodinproject-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Cache Dependencies
      - save_cache:
          name: Store bundle cache
          key: theodinproject-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the database
      - run: bundle exec rake db:setup

      # Run the tests
      - run: bundle exec rspec

  linters:
    executor: rails-executor
    steps:
      - checkout

      # Install bundler
      - run: gem install bundler

      # Restore Cached Dependencies
      - restore_cache:
          name: Restore bundle cache
          key: theodinproject-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Cache Dependencies
      - save_cache:
          name: Store bundle cache
          key: theodinproject-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the database
      - run: bundle exec rake db:setup

      # Run the tests
      - run: bundle exec rubocop

workflows:
  version: 2
  build_and_test:
    jobs:
      - rspec
      - linters
